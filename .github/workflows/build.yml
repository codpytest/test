name: build

on: [push]

jobs:
  build_wheels:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: 
        - ubuntu-22.04
        - windows-2022
        - macos-12
        # python-version: ["3.10"] #["3.9", "3.10"]
        # exclude:
          # - os: [windows-2022, win32]
    env:
      CIBW_ARCHS_LINUX: x86_64 i686 aarch64
      CIBW_ARCHS_MACOS: x86_64 universal2
      CIBW_ARCHS_WINDOWS: AMD64 x86 ARM64
      CIBW_BUILD: "cp37-* cp38-* cp39-* cp310-* cp311-*"
        
        
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'
          cache: pip

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
        
      - name: Install dependencies
        run: |
          python -m pip install cibuildwheel==2.11.3
          python -m pip install -U twine
          
      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        # env:  # Run the test suite after each build.
          # CIBW_BUILD: cp311-win_amd64
          # CIBW_TEST_REQUIRES: "pytest"
          # CIBW_TEST_COMMAND: pytest {package}/tests
      
      - name: Upload as build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*.whl