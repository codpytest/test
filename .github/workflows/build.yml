name: build

on: [push]

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Build SDist
      run: pipx run build --sdist

    - uses: actions/upload-artifact@v3
      with:
        path: dist/*.tar.gz

  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        python-version: ["3.10"] #["3.9", "3.10"]
    steps:
      - uses: actions/checkout@v3
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.4

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

      # - name: Set up Python ${{ matrix.python-version }}
      #   uses: actions/setup-python@v3
      #   with:
      #     python-version: ${{ matrix.python-version }}
      #     architecture: 'x64'
      #     cache: pip

      # - name: Display Python version
      #   run: python -c "import sys; print(sys.version)"
        
      # - name: Install dependencies
      #   run: |
      #     python -m pip install cibuildwheel==2.11.3
      #     python -m pip install -U twine
          
      # - name: Build wheels
      #   run: python -m cibuildwheel --output-dir wheelhouse
      #   env:  # Run the test suite after each build.
      #     CIBW_BUILD: cp39-*
      #     # CIBW_TEST_REQUIRES: "pytest"
      #     # CIBW_TEST_COMMAND: pytest {package}/tests
      
      # - name: Upload as build artifacts
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: test_wheels
      #     path: ./wheelhouse/*.whl

  upload_pypi:
    name: Upload
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.6.4
        with:
          user: __token__
          password: ${{ secrets.PYPY_API_TOKEN }}